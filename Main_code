import pyttsx3
import speech_recognition as sr
import webbrowser  
import datetime  
import wikipedia 
import calendar
from playsound import playsound
  
def takeCommand():
    
        r = sr.Recognizer()
     
        with sr.Microphone() as source:
            print('Listening')
            r.pause_threshold = 0.5
            audio = r.listen(source)
            
            try:
                print("Recognizing")
                Query = r.recognize_google(audio, language='en-in')
                print("the command is printed=", Query)
                
            except Exception as e:
                print(e)
                print("Say that again sir")
                return "None"
            
            return Query
    
def speak(audio):
        
        engine = pyttsx3.init()
        # getter method(gets the current value
        # of engine property)
        voices = engine.getProperty('voices')
        
        # setter method .[0]=male voice and 
        # [1]=female voice in set Property.
        engine.setProperty('voice', voices[0].id)
        
        # Method for the speaking of the the assistant
        engine.say(audio)  
        
        # Blocks while processing all the currently
        # queued commands
        engine.runAndWait()
    
def tellDay():
        
        # This function is for telling the
        # day of the week
        day = datetime.datetime.today().weekday() + 1
        
        #this line tells us about the number 
        # that will help us in telling the day
        Day_dict = {1: 'Monday', 2: 'Tuesday', 
                    3: 'Wednesday', 4: 'Thursday', 
                    5: 'Friday', 6: 'Saturday',
                    7: 'Sunday'}
        
        if day in Day_dict.keys():
            day_of_the_week = Day_dict[day]
            print(day_of_the_week)
            speak("The day is " + day_of_the_week)
    
    
def tellTime():
        
        # This method will give the time
        time = str(datetime.datetime.now())
        
        # the time will be displayed like 
        # this "2020-06-05 17:50:14.582630"
        #nd then after slicing we can get time
        print(time)
        hour = time[11:13]
        min = time[14:16]
        speak( "The time is sir" + hour + "Hours and" + min + "Minutes")    
    
def Hello():
        
        # This function is for when the assistant 
        # is called it will say hello and then 
        # take query
        speak("hello Sir , I am your Personal assistant. how can I help you")
     
    
def Take_query():
    
        # calling the Hello function for 
        # making it more interactive
        Hello()
        
        # This loop is infinite as it will take
        # our queries continuously until and unless
        # we do not say bye to exit or terminate 
        # the program
        while(True):
            
            # taking the query and making it into
            # lower case so that most of the times 
            # query matches and we get the perfect 
            # output
            query = takeCommand().lower()
             
            if "open google" in query:
                speak("Opening Google ")
                webbrowser.open("www.google.com")
                continue

            elif "twitter" in query:
                speak("yes sir Opening Twitter")
                webbrowser.open("www.twitter.com")

            elif "instagram" in query:
                speak("yes sir Opening instagram")
                webbrowser.open("www.instagram.com")
                continue
                    
            elif "day" in query:
                tellDay()
                continue
            
            elif "time" in query:
                tellTime()
                continue

            elif "play " in query:
                speak( " playing song")
                playsound('E:\py_practice\Channa_Mereya.mp3')
                continue
            
            # this will exit and terminate the program
            elif "bye" in query:
                speak("OK bye , Nice to meet you sir , take care , stay home stay safe")
                exit()
            
            elif " wikipedia" in query:
                
                # if any one wants to have a information
                # from wikipedia
                speak("Checking the wikipedia ")
                query = query.replace("wikipedia", "")
                
                # it will give the summary of 4 lines from 
                # wikipedia we can increase and decrease 
                # it also.
                result = wikipedia.summary(query, sentences=1)
                speak("According to wikipedia")
                speak(result)

            elif "show" in query:
                yy = 2021
                mm = 6
                print(calendar.month(yy,mm))
                speak( " here is your calender")

            
            elif "name" in query:
                speak("I am Cheems. Your deskstop Assistant. i can do whatever you want.")
            
            elif "how are you" in query:
                speak( " i am fine sir. what about you ")
                continue
            
if __name__ == '__main__':
      
    # main method for executing
    # the functions
        Take_query()
